"use strict"

//вкладені цикли
//Приклад 1
// for (let i = 0; i < 3; i++){
//     console.log(i);
//     for (let j = 0; j < 3; j++){
//            console.log(j);
//     }
// }

//Приклад 2
//сформувати пірамідку із зірочок
//*
//**
//***
//****
//*****
//*****
// let result = '';
// const length = 7;

// for (let i = 1; i < length; i++){
//     for (let j = 0; j < i; j++){
//         result += "*";
//     }
//     result += '\n'; //тут знак "\n"" означає перенос строки
// }
// console.log(result);

//Приклад 3
//first: - це мітка, чітка вказівка де зупиняти чи продовжувати цикл
first: for (let i = 0; i < 3; i++){
    console.log(`First level: ${i}`);
    for (let j = 0; j < 3; j++){
        console.log(`Second level: ${j}`);
        for (let k = 0; k < 3; k++){
            if (k === 2) break first;//continue first;
             //якщо k буде рівнятися 2, то самий перший цикл починається з нової ітерації, для цього треба поставити мітку
            //можна використовувати як beak так і   continue
                 console.log(`Third level: ${k}`);
    }
    }
}

//HOME WORK
//1. При помощи цикла выведите числа от 5 до 10 в консоль. 5 и 10 включительно. Цикл можно использовать любой
for (let i = 5; i >= 5 && i <= 10; i++) {
    console.log(i);
}
//2.При помощи цикла for вывести числа от 20 до 10 в консоль. В обратном порядке (20, 19, 18...). Когда цикл дойдет до числа 13 - остановить весь цикл
for (let i = 20; i > 13; i--) {
    console.log(i);
}
//3.При помощи цикла for выведите чётные числа от 2 до 10 включительно
for (let i = 2; i >= 2 && i <= 10; i += 2) {
  console.log(i);
}
//4.Перепишите цикл  for на вариант с while. Результат должен остаться точно таким же. Не создайте бесконечный цикл! Иначе браузер может зависнуть.

 //Цикл, который нужно переписать:
 
 for (let i = 2; i <= 16; i++) {
    if (i % 2 === 0) {
         continue;
    } else {
        console.log(i);
    }
}
 
let i = 2
while (i <= 16) {
    if (i % 2 === 0) {
        i++
        console.log(`if:${i}`);
         continue;
    } else {
        console.log(`else: ${i}`);
    }
    i++
    console.log(`while: ${i}`)
}
//5.Заполните массив цифрами от 5 до 10 включительно. Помните, что элементы массива можно сформировать так же, как и обращаться к ним: arr[0]
//спосіб 1
// let arr = [];
// for (let i = 5; i <= 10; i++) {
//   arr.push(i);
// }
// console.log(arr);
// //спосіб 2
// const arrayOfNumbers = [];

//     for (let i = 5; i < 11; i++) {
//         arrayOfNumbers[i - 5] = i;
//          console.log(arrayOfNumbers);
//     }

//     console.log(arrayOfNumbers);

//6. Заполните новый массив (result) числами из старого (arr). Количество элементов в массиве можно получить как arr.length, а к элементам обращаемся все так же: arr[0], arr[1] и тд.
//3Должен получиться точно такой же массив
    // Значения массива менять нельзя, тут он проверяется автоматически именно на эти значения
    // const arr = [3, 5, 8, 16, 20, 23, 50];
    // const result = [];

    // Пишем решение вот тут
    
    //  for (let i = 0; i < arr.length; i++) {
    //     result[i] = arr[i];
    //      console.log(result);
    // }

//7. Измените данный массив так, чтобы все числа были увеличены в 2 раза, а если попадается строка строка - то к ней было добавлено " - done".
//Для определения типа данных используйте typeof();
//Должно получиться: [ 10, 20, 'Shopping - done', 40, 'Homework - done' ]

    // Значения массива менять нельзя, тут он проверяется автоматически именно на эти значения
//     const data = [5, 10, 'Shopping', 20, 'Homework'];

//     // Пишем решение вот тут
// for (let i = 0; i < data.length; i++) {
//     let arr = [];
//     if (typeof(data[i]) === 'number') {
//         data[i] = data[i]*2
//     } else if (typeof(data[i]) === 'string')
//          data[i] = `${data[i]} - done`
//     }
//              console.log(data);
 

//8. Разверните массив data наоборот при помощи цикла и запишите данные в массив result.
//Должно получиться: [ 'Homework', 20, 'Shopping', 10, 5 ]
//     const data = [5, 10, 'Shopping', 20, 'Homework'];
//     const result = [];

//     // Пишем решение вот тут
// for (let i = 1; i <= data.length; i++) {
//         result[i-1] = data[data.length-i];
//     }
//     console.log(result);


//9. Сейчас вам необходимо написать код, который при помощи звездочек (*) в консоли нарисует вот такую фигуру:
/*
     *
    ***
   *****
  *******
 *********
***********
(Подсказка: в конце фигуры есть перенос строки \n, который тоже учитывается в тестах. В КОНЦЕ КАЖДОЙ СТРОКИ НЕТ ПРОБЕЛОВ, ТОЛЬКО ПЕРЕНОС)

Это похоже на то, что было в одном из уроков недавно, но сложнее. Задача непростая для новичков, так что с первого раза может не получится.*/
const lines = 5;
let result = '';

for (let i = 0; i <= lines; i++) {
    for (let j = 0; j < lines - i; j++) {
       console.log(result += "0");
    }
    for (let j = 0; j < 2 * i + 1; j++) {
        console.log(result += "*");
    }
   console.log(result += "\n?") ;
}
console.log(result);
